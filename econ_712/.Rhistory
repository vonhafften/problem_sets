toc_x <- c(0,   0,  4, 7, 21, 26)
toc_y <- c(25, 12, 4, 7,  0, 0)
lines(x = toc_x,
y = toc_y,
lwd=10,
col = "yellow")
u_bars <- 1:40
abline(a=0, b=1, lty=2, col="blue")
for (u_bar in u_bars) {
segments(x0=0, y0=u_bar*2, x1=2*u_bar/3,  y1=2*u_bar/3, col = "blue")
segments(y0=0, x0=u_bar*2, y1=2*u_bar/3,  x1=2*u_bar/3, col = "blue")
}
Arrows(x0=c(2, 22),
y0=c(12, 2),
x1=c(3, 23),
y1=c(13, 3),
col="blue")
points(y=10, x=1, pch=19, col = "red", cex = 2)
abline(h=10, v=1, col="red")
abline(a=11, b=-1, col="red")
abline(a=10.5, b=-1/2, col="red")
text("p_1/p_2 = infty", x=4, y=1, col = "red")
text("p_1/p_2 = 1", x=13, y=1, col = "red")
text("p_1/p_2 = 1/2", x=15, y=5, col = "red")
text("p_1/p_2 = 0", x=20, y=11, col = "red")
text("Indifference Curves", x=20, y=13, col = "blue")
text("Autarky", x = 1, y=11, pos = 4, col ="red")
1/2-2/6+1/4
1/3-2/3
3/4-2/3
1/8
1/9
1/12
3/4-2/3
1/12
.1*.1
(12)*(0.9)*(0.01)*(12)*(0.01)*(0.9)
knitr::opts_chunk$set(echo = TRUE)
library(shape)
xlim <- c(0, 4)
ylim <- c(0, 6)
plot(1, type="n", xlim = xlim, ylim = ylim, xaxs="i", yaxs="i", xlab = "c_1", ylab = "c_2", sub = "Indifference curves (blue), Budget constraints (red), and offer curve (yellow)", main = "Consumption Space")
c_1 <- (xlim[1]:(xlim[2]*1000))/1000
lines(x= c_1, y= 2 - sqrt(5*c_1-4*c_1^2), col = "yellow", lwd=6)
u_bar <- 1:10
for (u in u_bar) {
y <- c(2 + sqrt(4+10*c_1-4*c_1^2-u), rev(2 - sqrt(4+10*c_1-4*c_1^2-u)))
x <- c(c_1, rev(c_1))[is.finite(y)]
y <- y[is.finite(y)]
lines(x= c(x, x), y= c(y, y), col = "blue")
}
Arrows(x0=c(5/4, 2.5, 1/4),
x1=c(5/4, 2, 3/4),
y0=c(4.5, 2.5, 2.5),
y1=c(3.5, 2.5, 2.5),
col="blue")
abline(h=2, col = "red")
segments(x0 = 0, y0 = 6,
x1 = 0, y1 = 0, col = "red", lwd = 3)
segments(x0 = 0, y0 = 2,
x1 = 2, y1 = 0, col = "red")
points(y=2, x=0, pch=19, col = "red", cex = 2)
abline(v=0, h=0)
text("p_1/p_2 = infty", x=.5, y=5.5, col = "red")
text("p_1/p_2 = 0", x=3.5, y=2.5, col = "red")
text("p_1/p_2 = 1", x=3.5, y=.5, col = "red")
text("Indifference Curves", x=3, y=5, col = "blue")
text("Autarky", x = 0, y=2.2, pos = 4, col ="red")
plot(1, type="n", xlim = c(-1, 2), ylim = c(-2, 1), xaxs="i", yaxs="i", xlab = "x_1", ylab = "x_2", sub = "Trade offer curve (red)", main = "Excess Demand Space")
abline(h=0,v=0)
c_1 <- (xlim[1]:(xlim[2]*1000))/1000
lines(x= c_1, y= -sqrt(5*c_1-4*c_1^2), col = "red")
library(shape)
plot(1, type="n", xlim = c(0, 4), ylim = c(0, 4), xaxs="i", yaxs="i", xlab = "c_1", ylab = "c_2", sub = "Indifference curves (blue), Budget constraints (red), and offer curve (yellow)", main = "Consumption Space")
toc_x <- c(1, 1/3, 2/3, 0, 0)
toc_y <- c(0, 1/3, 2/3, 2, 4)
lines(x = toc_x,
y = toc_y,
lwd=10,
col = "yellow")
u_bars <- 1:20/2
abline(a=0, b=1, lty=2, col="blue")
for (u_bar in u_bars) {
segments(x0=0, y0=u_bar*2, x1=2*u_bar/3,  y1=2*u_bar/3, col = "blue")
segments(y0=0, x0=u_bar*2, y1=2*u_bar/3,  x1=2*u_bar/3, col = "blue")
}
Arrows(x0=c(1.5, 2.5),
x1=c(2.5, 3.5),
y0=c(2.5, 1.5),
y1=c(3.5, 2.5),
col="blue")
points(y=0, x=1, pch=19, col = "red", cex = 2)
abline(h=0, col = "red", lwd=3)
abline(v=1, a=1, b= -1, col = "red")
text("p_1/p_2 = infty", x=1.25, y=3, col = "red", srt=90)
text("p_1/p_2 = 1", x=.25, y=1.5, col = "red", srt=90)
text("p_1/p_2 = 0", x=3.5, y=.25, col = "red")
text("Indifference Curves", x=2.75, y=3.75, col = "blue")
text("Autarky", x = 1, y=.2, pos = 4, col ="red")
plot(1, type="n", xlim = c(-3, 2), ylim = c(-1, 3), xaxs="i", yaxs="i", xlab = "x_1", ylab = "x_2", sub = "Trade offer curve (red)", main = "Excess Demand Space")
abline(h=0, v=0)
lines(x = toc_x-1,
y = toc_y,
lwd=1,
col = "red")
library(shape)
plot(1, type="n", xlim = c(0, 25), ylim = c(0, 14), xaxs="i", yaxs="i", xlab = "c_1", ylab = "c_2", sub = "Indifference curves (blue), Budget constraints (red), and offer curve (yellow)", main = "Consumption Space")
toc_x <- c(0,   0,  4, 7, 21, 26)
toc_y <- c(25, 12, 4, 7,  0, 0)
lines(x = toc_x,
y = toc_y,
lwd=10,
col = "yellow")
u_bars <- 1:40
abline(a=0, b=1, lty=2, col="blue")
for (u_bar in u_bars) {
segments(x0=0, y0=u_bar*2, x1=2*u_bar/3,  y1=2*u_bar/3, col = "blue")
segments(y0=0, x0=u_bar*2, y1=2*u_bar/3,  x1=2*u_bar/3, col = "blue")
}
Arrows(x0=c(2, 22),
y0=c(12, 2),
x1=c(3, 23),
y1=c(13, 3),
col="blue")
points(y=10, x=1, pch=19, col = "red", cex = 2)
abline(h=10, v=1, col="red")
abline(a=11, b=-1, col="red")
abline(a=10.5, b=-1/2, col="red")
text("p_1/p_2 = infty", x=4, y=1, col = "red")
text("p_1/p_2 = 1", x=13, y=1, col = "red")
text("p_1/p_2 = 1/2", x=15, y=5, col = "red")
text("p_1/p_2 = 0", x=20, y=11, col = "red")
text("Indifference Curves", x=20, y=13, col = "blue")
text("Autarky", x = 1, y=10.5, pos = 4, col ="red")
library(shape)
xlim <- c(0, 4)
ylim <- c(0, 6)
plot(1, type="n", xlim = xlim, ylim = ylim, xaxs="i", yaxs="i", xlab = "c_1", ylab = "c_2", sub = "Indifference curves (blue), Budget constraints (red), and offer curve (yellow)", main = "Consumption Space")
c_1 <- (xlim[1]:(xlim[2]*1000))/1000
lines(x= c_1, y= 2 - sqrt(5*c_1-4*c_1^2), col = "yellow", lwd=6)
u_bar <- 5
for (u in u_bar) {
y <- c(2 + sqrt(4+10*c_1-4*c_1^2-u), rev(2 - sqrt(4+10*c_1-4*c_1^2-u)))
x <- c(c_1, rev(c_1))[is.finite(y)]
y <- y[is.finite(y)]
lines(x= c(x, x), y= c(y, y), col = "blue")
}
Arrows(x0=c(5/4, 2.5, 1/4),
x1=c(5/4, 2, 3/4),
y0=c(4.5, 2.5, 2.5),
y1=c(3.5, 2.5, 2.5),
col="blue")
abline(h=2, col = "red")
segments(x0 = 0, y0 = 6,
x1 = 0, y1 = 0, col = "red", lwd = 3)
segments(x0 = 0, y0 = 2,
x1 = 2, y1 = 0, col = "red")
points(y=2, x=0, pch=19, col = "red", cex = 2)
abline(v=0, h=0)
text("p_1/p_2 = infty", x=.5, y=5.5, col = "red")
text("p_1/p_2 = 0", x=3.5, y=2.5, col = "red")
text("p_1/p_2 = 1", x=3.5, y=.5, col = "red")
text("Indifference Curves", x=3, y=5, col = "blue")
text("Autarky", x = 0, y=2.2, pos = 4, col ="red")
library(shape)
xlim <- c(0, 4)
ylim <- c(0, 6)
plot(1, type="n", xlim = xlim, ylim = ylim, xaxs="i", yaxs="i", xlab = "c_1", ylab = "c_2", sub = "Indifference curves (blue), Budget constraints (red), and offer curve (yellow)", main = "Consumption Space")
c_1 <- (xlim[1]:(xlim[2]*1000))/1000
lines(x= c_1, y= 2 - sqrt(5*c_1-4*c_1^2), col = "yellow", lwd=6)
u_bar <- 6
for (u in u_bar) {
y <- c(2 + sqrt(4+10*c_1-4*c_1^2-u), rev(2 - sqrt(4+10*c_1-4*c_1^2-u)))
x <- c(c_1, rev(c_1))[is.finite(y)]
y <- y[is.finite(y)]
lines(x= c(x, x), y= c(y, y), col = "blue")
}
Arrows(x0=c(5/4, 2.5, 1/4),
x1=c(5/4, 2, 3/4),
y0=c(4.5, 2.5, 2.5),
y1=c(3.5, 2.5, 2.5),
col="blue")
abline(h=2, col = "red")
segments(x0 = 0, y0 = 6,
x1 = 0, y1 = 0, col = "red", lwd = 3)
segments(x0 = 0, y0 = 2,
x1 = 2, y1 = 0, col = "red")
points(y=2, x=0, pch=19, col = "red", cex = 2)
abline(v=0, h=0)
text("p_1/p_2 = infty", x=.5, y=5.5, col = "red")
text("p_1/p_2 = 0", x=3.5, y=2.5, col = "red")
text("p_1/p_2 = 1", x=3.5, y=.5, col = "red")
text("Indifference Curves", x=3, y=5, col = "blue")
text("Autarky", x = 0, y=2.2, pos = 4, col ="red")
library(shape)
xlim <- c(0, 4)
ylim <- c(0, 6)
plot(1, type="n", xlim = xlim, ylim = ylim, xaxs="i", yaxs="i", xlab = "c_1", ylab = "c_2", sub = "Indifference curves (blue), Budget constraints (red), and offer curve (yellow)", main = "Consumption Space")
c_1 <- (xlim[1]:(xlim[2]*1000))/1000
lines(x= c_1, y= 2 - sqrt(5*c_1-4*c_1^2), col = "yellow", lwd=6)
u_bar <- 4
for (u in u_bar) {
y <- c(2 + sqrt(4+10*c_1-4*c_1^2-u), rev(2 - sqrt(4+10*c_1-4*c_1^2-u)))
x <- c(c_1, rev(c_1))[is.finite(y)]
y <- y[is.finite(y)]
lines(x= c(x, x), y= c(y, y), col = "blue")
}
Arrows(x0=c(5/4, 2.5, 1/4),
x1=c(5/4, 2, 3/4),
y0=c(4.5, 2.5, 2.5),
y1=c(3.5, 2.5, 2.5),
col="blue")
abline(h=2, col = "red")
segments(x0 = 0, y0 = 6,
x1 = 0, y1 = 0, col = "red", lwd = 3)
segments(x0 = 0, y0 = 2,
x1 = 2, y1 = 0, col = "red")
points(y=2, x=0, pch=19, col = "red", cex = 2)
abline(v=0, h=0)
text("p_1/p_2 = infty", x=.5, y=5.5, col = "red")
text("p_1/p_2 = 0", x=3.5, y=2.5, col = "red")
text("p_1/p_2 = 1", x=3.5, y=.5, col = "red")
text("Indifference Curves", x=3, y=5, col = "blue")
text("Autarky", x = 0, y=2.2, pos = 4, col ="red")
library(shape)
xlim <- c(0, 4)
ylim <- c(0, 6)
plot(1, type="n", xlim = xlim, ylim = ylim, xaxs="i", yaxs="i", xlab = "c_1", ylab = "c_2", sub = "Indifference curves (blue), Budget constraints (red), and offer curve (yellow)", main = "Consumption Space")
c_1 <- (xlim[1]:(xlim[2]*1000))/1000
lines(x= c_1, y= 2 - sqrt(5*c_1-4*c_1^2), col = "yellow", lwd=6)
u_bar <- 1:10
for (u in u_bar) {
y <- c(2 + sqrt(4+10*c_1-4*c_1^2-u), rev(2 - sqrt(4+10*c_1-4*c_1^2-u)))
x <- c(c_1, rev(c_1))[is.finite(y)]
y <- y[is.finite(y)]
lines(x= c(x, x), y= c(y, y), col = "blue")
}
Arrows(x0=c(5/4, 2.5, 1/4),
x1=c(5/4, 2, 3/4),
y0=c(4.5, 2.5, 2.5),
y1=c(3.5, 2.5, 2.5),
col="blue")
abline(h=2, col = "red")
segments(x0 = 0, y0 = 6,
x1 = 0, y1 = 0, col = "red", lwd = 3)
segments(x0 = 0, y0 = 2,
x1 = 2, y1 = 0, col = "red")
points(y=2, x=0, pch=19, col = "red", cex = 2)
abline(v=0, h=0)
text("p_1/p_2 = infty", x=.5, y=5.5, col = "red")
text("p_1/p_2 = 0", x=3.5, y=2.5, col = "red")
text("p_1/p_2 = 1", x=3.5, y=.5, col = "red")
text("Indifference Curves", x=3, y=5, col = "blue")
text("Autarky", x = 0, y=2.2, pos = 4, col ="red")
library(shape)
xlim <- c(0, 4)
ylim <- c(0, 6)
plot(1, type="n", xlim = xlim, ylim = ylim, xaxs="i", yaxs="i", xlab = "c_1", ylab = "c_2", sub = "Indifference curves (blue), Budget constraints (red), and offer curve (yellow)", main = "Consumption Space")
c_1 <- (xlim[1]:(xlim[2]*1000))/1000
lines(x= c_1, y= 2 - sqrt(5*c_1-4*c_1^2), col = "yellow", lwd=6)
u_bar <- 9
for (u in u_bar) {
y <- c(2 + sqrt(4+10*c_1-4*c_1^2-u), rev(2 - sqrt(4+10*c_1-4*c_1^2-u)))
x <- c(c_1, rev(c_1))[is.finite(y)]
y <- y[is.finite(y)]
lines(x= c(x, x), y= c(y, y), col = "blue")
}
Arrows(x0=c(5/4, 2.5, 1/4),
x1=c(5/4, 2, 3/4),
y0=c(4.5, 2.5, 2.5),
y1=c(3.5, 2.5, 2.5),
col="blue")
abline(h=2, col = "red")
segments(x0 = 0, y0 = 6,
x1 = 0, y1 = 0, col = "red", lwd = 3)
segments(x0 = 0, y0 = 2,
x1 = 2, y1 = 0, col = "red")
points(y=2, x=0, pch=19, col = "red", cex = 2)
abline(v=0, h=0)
text("p_1/p_2 = infty", x=.5, y=5.5, col = "red")
text("p_1/p_2 = 0", x=3.5, y=2.5, col = "red")
text("p_1/p_2 = 1", x=3.5, y=.5, col = "red")
text("Indifference Curves", x=3, y=5, col = "blue")
text("Autarky", x = 0, y=2.2, pos = 4, col ="red")
10*(5/4)-4*(5/4)^2+4*(2)-2^2
library(shape)
plot(1, type="n", xlim = c(0, 25), ylim = c(0, 14), xaxs="i", yaxs="i", xlab = "c_1", ylab = "c_2", sub = "Indifference curves (blue), Budget constraints (red), and offer curve (yellow)", main = "Consumption Space")
toc_x <- c(0,   0,  4, 7, 21, 26)
toc_y <- c(25, 12, 4, 7,  0, 0)
lines(x = toc_x,
y = toc_y,
lwd=10,
col = "yellow")
u_bars <- 1:40
abline(a=0, b=1, lty=2, col="blue")
for (u_bar in u_bars) {
segments(x0=0, y0=u_bar*2, x1=2*u_bar/3,  y1=2*u_bar/3, col = "blue")
segments(y0=0, x0=u_bar*2, y1=2*u_bar/3,  x1=2*u_bar/3, col = "blue")
}
Arrows(x0=c(2, 22),
y0=c(12, 2),
x1=c(3, 23),
y1=c(13, 3),
col="blue")
points(y=10, x=1, pch=19, col = "red", cex = 2)
abline(h=10, v=1, col="red")
abline(a=11, b=-1, col="red")
abline(a=10.5, b=-1/2, col="red")
text("p_1/p_2 = infty", x=4, y=1, col = "red")
text("p_1/p_2 = 1", x=13, y=1, col = "red")
text("p_1/p_2 = 1/2", x=15, y=5, col = "red")
text("p_1/p_2 = 0", x=20, y=11, col = "red")
text("Indifference Curves", x=20, y=13, col = "blue")
text("Autarky", x = 1, y=10.5, pos = 4, col ="red")
points(x=7, y=7)
sin(pi)
sin(-pi)
pi/2
pi/3
2*pi/3
3*pi/4
pi/2
pi/3
sin(-pi)
sin(-pi)
sin(pi)
pi
pi/4
-24*-5
120^2
120*10*2
169*36
36*24
14400-6084
2400-864
100-36
33/4
63/4
12 - 33/4
sqrt(169-24*(33/4)+(33/4)^2)
6.25*4
(33/4)/5+(25/4)/3
3*4*5
((33/4)/5+(25/4)/3 )*60
24*(1/4)^2
library(matlib)
matrix(c(0, -1, -1, 2), nrow=2)
eigen(matrix(c(0, -1, -1, 2), nrow=2))
eigen(matrix(c(3/2, -1, -1, 2), nrow=2))
7/4 + sqrt(17)/4
7/4 - sqrt(17)/4
2(1/4)^4+(1/8)^2-(1/4)*(1/8)+1
2*(1/4)^4+(1/8)^2-(1/4)*(1/8)+1
2*(-1/4)^4+(-1/8)^2-(-1/4)*(-1/8)+1
knitr::opts_chunk$set(echo = TRUE)
library(rmatio)
install.packages("rmatio")
library(rmatio)
x <- read.mat("ss.mat")
y <- read.mat("no_ss.matss.mat")
library(rmatio)
x <- read.mat("ss.mat")
y <- read.mat("no_ss.mat")
library(rmatio)
x <- read.mat("ss.mat")
read.mat("ss.mat")
getwd()
setwd("Documents/UW Madison/Fall 2020/problem_sets/econ_712/")
library(rmatio)
x <- read.mat("ss.mat")
getwd
getwd()
ls()
system("ls")
read.mat("ss.mat")
library(rmatio)
ss <- read.mat("ss.mat")
ss
kable
library(rmatio)
library(knitr)
ss <- read.mat("ss.mat")
no_ss <- read.mat("no_ss.mat")
kable()
library(rmatio)
library(knitr)
ss <- read.mat("ss.mat")
no_ss <- read.mat("no_ss.mat")
kable(ss)
library(rmatio)
library(knitr)
ss <- read.mat("ss.mat")
no_ss <- read.mat("no_ss.mat")
paste(ss$K0, ss$L0, ss$w0, ss$r0, ss$b)
library(rmatio)
library(knitr)
ss <- read.mat("ss.mat")
no_ss <- read.mat("no_ss.mat")
paste(ss$K0, ss$L0, ss$w0, ss$r0, ss$b)
paste(no_ss$K0, no_ss$L0, no_ss$w0, no_ss$r0, no_ss$b)
library(rmatio)
library(knitr)
ss <- read.mat("ps5_ss.mat")
no_ss <- read.mat("ps5_no_ss.mat")
welfare_comparison <- read.mat("ps5_welfare_comparison.mat")
c(ss$K0, ss$L0, ss$w0, ss$r0, ss$b)
c(no_ss$K0, no_ss$L0, no_ss$w0, no_ss$r0, no_ss$b)
library(rmatio)
library(knitr)
ss <- read.mat("ps5_ss.mat")
no_ss <- read.mat("ps5_no_ss.mat")
welfare <- read.mat("ps5_welfare_comparison.mat")
c(ss$K0, ss$L0, ss$w0, ss$r0, ss$b, welfare$V1_ss, welfare$W_ss)
c(no_ss$K0, no_ss$L0, no_ss$w0, no_ss$r0, no_ss$b, welfare$V1_noss, welfare$W_noss)
library(rmatio)
library(knitr)
ss <- read.mat("ps5_ss.mat")
no_ss <- read.mat("ps5_no_ss.mat")
welfare <- read.mat("ps5_welfare_comparison.mat")
c(ss$K0, ss$L0, ss$w0, ss$r0, ss$b, welfare$V1_ss, welfare$W_ss)
c(no_ss$K0, no_ss$L0, no_ss$w0, no_ss$r0, no_ss$b, welfare$V1_noss, welfare$W_noss)
library(rmatio)
library(knitr)
library(tidyverse)
ss <- read.mat("ps5_ss.mat")
no_ss <- read.mat("ps5_no_ss.mat")
welfare <- read.mat("ps5_welfare_comparison.mat")
w_ss <- c(ss$K0, ss$L0, ss$w0, ss$r0, ss$b, welfare$V1_ss, welfare$W_ss)
w0_ss <- c(no_ss$K0, no_ss$L0, no_ss$w0, no_ss$r0, no_ss$b, welfare$V1_noss, welfare$W_noss)
row_names <- c("capital K", "labor L", "wage W", "interest r", "pension benefit b", "newborn welfare V1(k1)", "aggregate welfare W")
tibble(`with SS` = w_ss,`without SS` = w_ss, row.names = row_names)
library(rmatio)
library(knitr)
library(tidyverse)
ss <- read.mat("ps5_ss.mat")
no_ss <- read.mat("ps5_no_ss.mat")
welfare <- read.mat("ps5_welfare_comparison.mat")
w_ss <- c(ss$K0, ss$L0, ss$w0, ss$r0, ss$b, welfare$V1_ss, welfare$W_ss)
w0_ss <- c(no_ss$K0, no_ss$L0, no_ss$w0, no_ss$r0, no_ss$b, welfare$V1_noss, welfare$W_noss)
row_names <- c("capital K", "labor L", "wage W", "interest r", "pension benefit b", "newborn welfare V1(k1)", "aggregate welfare W")
tibble(`variables` = row_names, `with SS` = w_ss, `without SS` = w_ss)
library(rmatio)
library(knitr)
library(tidyverse)
ss <- read.mat("ps5_ss.mat")
no_ss <- read.mat("ps5_no_ss.mat")
welfare <- read.mat("ps5_welfare_comparison.mat")
w_ss <- c(ss$K0, ss$L0, ss$w0, ss$r0, ss$b, welfare$V1_ss, welfare$W_ss)
w0_ss <- c(no_ss$K0, no_ss$L0, no_ss$w0, no_ss$r0, no_ss$b, welfare$V1_noss, welfare$W_noss)
row_names <- c("capital K", "labor L", "wage W", "interest r", "pension benefit b", "newborn welfare V1(k1)", "aggregate welfare W")
tibble(`variables` = row_names, `with SS` = w_ss, `without SS` = w_ss) %>% kable()
library(rmatio)
library(knitr)
library(tidyverse)
ss <- read.mat("ps5_ss.mat")
no_ss <- read.mat("ps5_no_ss.mat")
welfare <- read.mat("ps5_welfare_comparison.mat")
w_ss <- signif(c(ss$K0, ss$L0, ss$w0, ss$r0, ss$b, welfare$V1_ss, welfare$W_ss), digits = 2)
w0_ss <- signif(c(no_ss$K0, no_ss$L0, no_ss$w0, no_ss$r0, no_ss$b, welfare$V1_noss, welfare$W_noss), digits = 2)
row_names <- c("capital K", "labor L", "wage W", "interest r", "pension benefit b", "newborn welfare V1(k1)", "aggregate welfare W")
tibble(`variables` = row_names, `with SS` = w_ss, `without SS` = w_ss) %>% kable()
library(rmatio)
library(knitr)
library(tidyverse)
ss <- read.mat("ps5_ss.mat")
no_ss <- read.mat("ps5_no_ss.mat")
welfare <- read.mat("ps5_welfare_comparison.mat")
w_ss <- signif(c(ss$K0, ss$L0, ss$w0, ss$r0, ss$b, welfare$V1_ss, welfare$W_ss), digits = 5)
w0_ss <- signif(c(no_ss$K0, no_ss$L0, no_ss$w0, no_ss$r0, no_ss$b, welfare$V1_noss, welfare$W_noss), digits = 2)
row_names <- c("capital K", "labor L", "wage W", "interest r", "pension benefit b", "newborn welfare V1(k1)", "aggregate welfare W")
tibble(`variables` = row_names, `with SS` = w_ss, `without SS` = w_ss) %>% kable()
library(rmatio)
library(knitr)
library(tidyverse)
ss <- read.mat("ps5_ss.mat")
no_ss <- read.mat("ps5_no_ss.mat")
welfare <- read.mat("ps5_welfare_comparison.mat")
w_ss <- signif(c(ss$K0, ss$L0, ss$w0, ss$r0, ss$b, welfare$V1_ss, welfare$W_ss), digits = 4)
w0_ss <- signif(c(no_ss$K0, no_ss$L0, no_ss$w0, no_ss$r0, no_ss$b, welfare$V1_noss, welfare$W_noss), digits = 2)
row_names <- c("capital K", "labor L", "wage W", "interest r", "pension benefit b", "newborn welfare V1(k1)", "aggregate welfare W")
tibble(`variables` = row_names, `with SS` = w_ss, `without SS` = w_ss) %>% kable()
library(rmatio)
library(knitr)
library(tidyverse)
ss <- read.mat("ps5_ss.mat")
no_ss <- read.mat("ps5_no_ss.mat")
welfare <- read.mat("ps5_welfare_comparison.mat")
w_ss <- c(ss$K0, ss$L0, ss$w0, ss$r0, ss$b, welfare$V1_ss, welfare$W_ss)
w0_ss <- c(no_ss$K0, no_ss$L0, no_ss$w0, no_ss$r0, no_ss$b, welfare$V1_noss, welfare$W_noss)
row_names <- c("capital K", "labor L", "wage W", "interest r", "pension benefit b", "newborn welfare V1(k1)", "aggregate welfare W")
tibble(`variables` = row_names, `with SS` = w_ss, `without SS` = w_ss) %>% kable(digits = 3)
library(rmatio)
library(knitr)
library(tidyverse)
ss <- read.mat("ps5_ss.mat")
no_ss <- read.mat("ps5_no_ss.mat")
welfare <- read.mat("ps5_welfare_comparison.mat")
w_ss <- c(ss$K0, ss$L0, ss$w0, ss$r0, ss$b, welfare$V1_ss, welfare$W_ss)
wo_ss <- c(no_ss$K0, no_ss$L0, no_ss$w0, no_ss$r0, no_ss$b, welfare$V1_noss, welfare$W_noss)
row_names <- c("capital K", "labor L", "wage W", "interest r", "pension benefit b", "newborn welfare V1(k1)", "aggregate welfare W")
tibble(`variables` = row_names, `with SS` = w_ss, `without SS` = wo_ss) %>% kable(digits = 3)
knitr::opts_chunk$set(echo = TRUE)
library(rmatio)
library(knitr)
library(tidyverse)
readPNG("ps5_problem2.4_1.png", native = TRUE, info = TRUE)
include_graphics("ps5_problem2.4_1.png", native = TRUE, info = TRUE)
include_graphics("ps5_problem2.4_1.png")
include_graphics("ps5_problem2.4_2.png.png")
include_graphics("ps5_problem2.4_1.png")
include_graphics("ps5_problem2.4_2.png")
include_graphics("ps5_problem2.5.png")
