xmin = min(data$date), xmax = max(data$date),
ymin = 225, ymax = 250,
fill = "green", alpha = 0.2) +
geom_point(aes(y=morning, x=date)) +
annotate("text", x=min(data$date), y = 295, col = "red",
label = "First Year", hjust = 0) +
annotate("text", x=min(data$date), y = 262.5, col = "orange",
label = "Pandemic", hjust = 0) +
annotate("text", x=min(data$date), y = 237.5, col = "green",
label = "Applications", hjust = 0) +
geom_smooth(aes(y=morning, x=date), span = 0.3)
data %>%
ggplot() +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 275, ymax = 300,
fill = "red", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 250, ymax = 275,
fill = "yellow", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 225, ymax = 250,
fill = "green", alpha = 0.2) +
geom_point(aes(y=morning, x=date)) +
annotate("text", x=min(data$date), y = 295, col = "red",
label = "First Year", hjust = 0) +
annotate("text", x=min(data$date), y = 262.5, col = "orange",
label = "Pandemic", hjust = 0) +
annotate("text", x=min(data$date), y = 237.5, col = "green",
label = "Applications", hjust = 0) +
geom_smooth(aes(y=morning, x=date), span = 0.35)
data %>%
ggplot() +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 275, ymax = 300,
fill = "red", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 250, ymax = 275,
fill = "yellow", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 225, ymax = 250,
fill = "green", alpha = 0.2) +
geom_point(aes(y=morning, x=date)) +
annotate("text", x=min(data$date), y = 295, col = "red",
label = "First Year", hjust = 0) +
annotate("text", x=min(data$date), y = 262.5, col = "orange",
label = "Pandemic", hjust = 0) +
annotate("text", x=min(data$date), y = 237.5, col = "green",
label = "Applications", hjust = 0) +
geom_smooth(aes(y=morning, x=date), span = 0.3)
data %>%
ggplot() +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 275, ymax = 300,
fill = "red", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 250, ymax = 275,
fill = "yellow", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 225, ymax = 250,
fill = "green", alpha = 0.2) +
geom_point(aes(y=morning, x=date)) +
annotate("text", x=min(data$date), y = 295, col = "red",
label = "First Year", hjust = 0) +
annotate("text", x=min(data$date), y = 262.5, col = "orange",
label = "Pandemic", hjust = 0) +
annotate("text", x=min(data$date), y = 237.5, col = "green",
label = "Applications", hjust = 0) +
geom_smooth(aes(y=morning, x=date), span = 0.25)
data %>%
ggplot() +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 275, ymax = 300,
fill = "red", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 250, ymax = 275,
fill = "yellow", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 225, ymax = 250,
fill = "green", alpha = 0.2) +
geom_point(aes(y=morning, x=date)) +
annotate("text", x=min(data$date), y = 295, col = "red",
label = "First Year", hjust = 0) +
annotate("text", x=min(data$date), y = 262.5, col = "orange",
label = "Pandemic", hjust = 0) +
annotate("text", x=min(data$date), y = 237.5, col = "green",
label = "Applications", hjust = 0) +
geom_smooth(aes(y=morning, x=date), span = 0.25) +
ylim(225, 300)
data %>%
ggplot() +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 275, ymax = 300,
fill = "red", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 250, ymax = 275,
fill = "yellow", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 225, ymax = 250,
fill = "green", alpha = 0.2) +
geom_point(aes(y=morning, x=date)) +
annotate("text", x=min(data$date), y = 295, col = "red",
label = "First Year", hjust = 0) +
annotate("text", x=min(data$date), y = 262.5, col = "orange",
label = "Pandemic", hjust = 0) +
annotate("text", x=min(data$date), y = 237.5, col = "green",
label = "Applications", hjust = 0) +
geom_smooth(aes(y=morning, x=date), span = 0.25)
data %>%
ggplot() +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 275, ymax = 300,
fill = "red", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 250, ymax = 275,
fill = "yellow", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 225, ymax = 250,
fill = "green", alpha = 0.2) +
geom_point(aes(y=morning, x=date)) +
annotate("text", x=min(data$date), y = 295, col = "red",
label = "First Year", hjust = 0) +
annotate("text", x=min(data$date), y = 262.5, col = "orange",
label = "Pandemic", hjust = 0) +
annotate("text", x=min(data$date), y = 237.5, col = "green",
label = "Applications", hjust = 0) +
geom_smooth(aes(y=morning, x=date), span = 0.3)
data %>%
ggplot() +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 275, ymax = 300,
fill = "red", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 250, ymax = 275,
fill = "yellow", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 225, ymax = 250,
fill = "green", alpha = 0.2) +
geom_point(aes(y=morning, x=date)) +
annotate("text", x=min(data$date), y = 295, col = "red",
label = "First Year", hjust = 0) +
annotate("text", x=min(data$date), y = 262.5, col = "orange",
label = "Pandemic", hjust = 0) +
annotate("text", x=min(data$date), y = 237.5, col = "green",
label = "Applications", hjust = 0)
library(tidyverse)
library(janitor)
library(lubridate)
library(zoo)
data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQTfzNMym06q46buDYyRdjXGj3CZaParAI72Jy9xek7t6UsPOnUB4NEQdvQNm_qP4-FK9r3uFTS_6_H/pub?output=csv") %>%
clean_names() %>%
filter(!is.na(morning)) %>%
mutate(date = mdy(date))
full_data <- tibble(date = seq(min(data$date), max(data$date), by = "day")) %>%
left_join(data, by = "date") %>%
mutate(morning = na.approx(morning),
change = (morning - lag(morning))/as.numeric(date - lag(date)))
# Last Month
window <- 90
data %>%
filter(date > today()-window) %>%
ggplot() +
geom_smooth(aes(y=morning, x=date)) +
geom_point(aes(y=morning, x=date)) +
annotate("rect",
xmin = today()-window, xmax = today(),
ymin = 252, ymax = 300,
fill = "blue", alpha = 0.2) +
annotate("rect",
xmin = today()-window, xmax = today(),
ymin = 210, ymax = 252,
fill = "blue", alpha = 0) +
annotate("rect",
xmin = today()-window, xmax = today(),
ymin = 156, ymax = 210,
fill = "blue", alpha = 0.2)
full_data %>%
filter(date > today()-window) %>%
ggplot() +
geom_smooth(aes(y=change, x=date)) +
geom_point(aes(y=change, x=date))
data %>%
ggplot() +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 252, ymax = 300,
fill = "blue", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 210, ymax = 252,
fill = "dodgerblue", alpha = 0.0) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 156, ymax = 210,
fill = "blue", alpha = 0.2) +
annotate("rect",
xmin = mdy("09-08-2020"), xmax = mdy("12-23-2020"),
ymin = 150, ymax = 300,
fill = "red", alpha = 0.2) +
annotate("rect",
xmin = mdy("01-22-2021"), xmax = mdy("05-13-2021"),
ymin = 150, ymax = 300,
fill = "red", alpha = 0.2) +
annotate("rect",
xmin = mdy("09-08-2021"), xmax = mdy("12-23-2021"),
ymin = 150, ymax = 300,
fill = "red", alpha = 0.2) +
annotate("rect",
xmin = mdy("01-22-2022"), xmax = max(data$date),
ymin = 150, ymax = 300,
fill = "red", alpha = 0.2) +
geom_point(aes(y=morning, x=date)) +
annotate("text", x=min(data$date), y = 260, col = "black",
label = "Obsese", hjust = 0) +
annotate("text", x=min(data$date), y = 230, col = "black",
label = "Overweight", hjust = 0) +
annotate("text", x=min(data$date), y = 180, col = "black",
label = "Normal", hjust = 0)
data %>%
ggplot() +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 275, ymax = 300,
fill = "red", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 250, ymax = 275,
fill = "yellow", alpha = 0.2) +
annotate("rect",
xmin = min(data$date), xmax = max(data$date),
ymin = 225, ymax = 250,
fill = "green", alpha = 0.2) +
geom_point(aes(y=morning, x=date)) +
annotate("text", x=min(data$date), y = 295, col = "red",
label = "First Year", hjust = 0) +
annotate("text", x=min(data$date), y = 262.5, col = "orange",
label = "Pandemic", hjust = 0) +
annotate("text", x=min(data$date), y = 237.5, col = "green",
label = "Applications", hjust = 0)
full_data %>%
ggplot() +
geom_smooth(aes(y=change, x=date)) +
geom_point(aes(y=change, x=date))
starting_weight <- 290
goal_weight <- 250
current_weight <- data %>% filter(date == today()) %>% pull(morning)
print(paste("Pounds lost:", starting_weight - current_weight))
print(paste("Pounds to go:", current_weight - goal_weight))
print(paste0("Progress made: ", round((starting_weight - current_weight)/(starting_weight - goal_weight) * 100), "%"))
print(paste0("Progress to go: ", round((current_weight - goal_weight)/(starting_weight - goal_weight) * 100), "%"))
d = sqrt(19)/3 - 4/3
s = (1/2)*(d^2 + d)/d
sqrt(9)/6 - 1/6
sqrt(19)/6 - 1/6
d_fn(d, e) <- ((d^4/(4*(d+e)^2)) - (d^2/(d+e)) -2*d + (1/4))
d_fn(d, e) <- ((d^4/(4*(d+e)^2)) - (d^2/(d+e)) -2*d + (1/4))
d_fn(d, e) <- ((d^4/(4*(d+e)^2)) - (d^2/(d+e)) -2*d + (1/4))
d_fn(d, e) <- ((d^4/(4*(d+e)^2)) - (d^2/(d+e)) -2*d + (1/4))
d_fn <- function(d, e){
((d^4/(4*(d+e)^2)) - (d^2/(d+e)) -2*d + (1/4))
}
d_fn(1, 1)
e <- seq(0, 10000, by = 0.5)
for e_this in e {
printfor (e_this in e) {
d <- ((1 - 4*e) + sqrt(16*e^2 + 4*e +1))/6
}
}
for (e_this in e) {
d <- ((1 - 4*e) + sqrt(16*e^2 + 4*e +1))/6
}
for (e_this in e) {
print(e_this)
}
e <- seq(0, 10000, by = 0.5)
d_fn <- function(d, e){
((d^4/(4*(d+e)^2)) - (d^2/(d+e)) -2*d + (1/4))
}
d <- zeros(length(e))
d <- zeros()
d <- rep(0, length(e))
d
d <- rep(0.0, length(e))
d
for (i in 1:length(e)) {
d[i] <- uniroot(d_fn, c(0, 1), tol =0.00001, e = e[i])
}
for (i in 1:length(e)) {
print(e[i])
d[i] <- uniroot(d_fn, c(0, 1), tol = 0.00001, e = e[i])
}
# constrained planner solution
e <- seq(0.0001, 10000, by = 0.5)
for (i in 1:length(e)) {
print(e[i])
d[i] <- uniroot(d_fn, c(0, 1), tol = 0.00001, e = e[i])
}
d
for (i in 1:length(e)) {
d[i] <- uniroot(d_fn, c(0, 1), tol = 0.00001, e = e[i])[1]
}
d
d <- rep(0.0, length(e))
for (i in 1:length(e)) {
d[i] <- uniroot(d_fn, c(0, 1), tol = 0.00001, e = e[i])[1]
}
d
uniroot(d_fn, c(0, 1), tol = 0.00001, e = e[i])
for (i in 1:length(e)) {
d[i] <- uniroot(d_fn, c(0, 1), tol = 0.00001, e = e[i])$root
}
d
d <- rep(0.0, length(e))
d <- rep(0.0, length(e))
for (i in 1:length(e)) {
d[i] <- uniroot(d_fn, c(0, 1), tol = 0.00001, e = e[i])$root
}
d
s <- 1/2*((d^2 + d + e)/(d +e))
lines(s, d, col= "blue")
png("partial_info_sd.png")
plot(1, 1, type = "n", ylim = c(0, 1), xlim = c(0, 1), xlab = "S", ylab = "D",
main = "Partial Information Allocation in (S, D)")
dev.off()
plot(1, 1, type = "n", ylim = c(0, 1), xlim = c(0, 1), xlab = "S", ylab = "D",
main = "Partial Information Allocation in (S, D)")
lines(s, d, col= "blue")
points(x = s[1], y = d[1], col = "blue", pch = 7)
points(x = s[length(e)], y = d[length(e)], col = "blue", pch = 7)
text(x = (s[1] + s[length(e)])/2, y = (d[1] + d[length(e)])/2, col = "blue", "(S*(E), D*(E))",  pos = 2)
text(x = s[1], y = d[1], col = "blue", "E = 0",  pos = 4)
text(x = s[length(e)], y = d[length(e)], col = "blue", "E to infty",  pos = 1)
# unconstrained bank problem
segments(x0 = 0.5, y0 = 0.5, x1 = 1.0, y1 = 1.0, col = "red")
points(x = 1/2, y = 1/2, col = "red", pch = 7)
points(x = 1, y = 1, col = "red", pch = 7)
text(x = 3/4, y = 3/4, col = "red", "S^U(E), D^U(E)",  pos = 2)
text(x = 1/2, y = 1/2, col = "red", "E to infinity",  pos = 1)
text(x = 1, y = 1, col = "red", "E = 0",  pos = 2)
plot(1, 1, type = "n", ylim = c(0, 1), xlim = c(0, 1), xlab = "S", ylab = "D",
main = "Partial Information Allocation in (S, D)")
lines(s, d, col= "blue")
points(x = s[1], y = d[1], col = "blue", pch = 7)
points(x = s[length(e)], y = d[length(e)], col = "blue", pch = 7)
text(x = (s[1] + s[length(e)])/2, y = (d[1] + d[length(e)])/2, col = "blue", "(S*(E), D*(E))",  pos = 4)
text(x = s[1], y = d[1], col = "blue", "E = 0",  pos = 2)
text(x = s[length(e)], y = d[length(e)], col = "blue", "E to infty",  pos = 2)
# unconstrained bank problem
segments(x0 = 0.5, y0 = 0.5, x1 = 1.0, y1 = 1.0, col = "red")
points(x = 1/2, y = 1/2, col = "red", pch = 7)
points(x = 1, y = 1, col = "red", pch = 7)
text(x = 3/4, y = 3/4, col = "red", "S^U(E), D^U(E)",  pos = 2)
text(x = 1/2, y = 1/2, col = "red", "E to infinity",  pos = 1)
text(x = 1, y = 1, col = "red", "E = 0",  pos = 2)
plot(1, 1, type = "n", ylim = c(0, 1), xlim = c(0, 1), xlab = "S", ylab = "D",
main = "Partial Information Allocation in (S, D)")
lines(s, d, col= "blue")
points(x = s[1], y = d[1], col = "blue", pch = 7)
points(x = s[length(e)], y = d[length(e)], col = "blue", pch = 7)
text(x = (s[1] + s[length(e)])/2, y = (d[1] + d[length(e)])/2, col = "blue", "(S*(E), D*(E))",  pos = 4)
text(x = s[1], y = d[1], col = "blue", "E = 0",  pos = 1)
text(x = s[length(e)], y = d[length(e)], col = "blue", "E to infty",  pos = 2)
# unconstrained bank problem
segments(x0 = 0.5, y0 = 0.5, x1 = 1.0, y1 = 1.0, col = "red")
points(x = 1/2, y = 1/2, col = "red", pch = 7)
points(x = 1, y = 1, col = "red", pch = 7)
text(x = 3/4, y = 3/4, col = "red", "S^U(E), D^U(E)",  pos = 2)
text(x = 1/2, y = 1/2, col = "red", "E to infinity",  pos = 1)
text(x = 1, y = 1, col = "red", "E = 0",  pos = 2)
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2))
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2))
xlab("U_V")
ylab("V")
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2), xlab = "U_V", ylab= "V")
abline(a = 0, b= 1)
abline(a = 0, b= 1)
abline(a = 1, b= 1)
abline(h=0, v=0)
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2), xlab = "U_V", ylab= "V",xaxp = FALSE)
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2), xlab = "U_V", ylab= "V")
abline(h=0, v=0)
abline(a = 0, b= 1, col = "red")
abline(a = 1, b= 1, col = "blue")
text("Z = 1", x = 0, y = 1)
text("Z = 1", x = 0, y = 1, adj = 2
)
text("Z = 1", x = 0, y = 1, adj = 2, col = "blue")
text("Z = 1", x = -1, y = -1, adj = 2, col = "red")
text("Z = 1", x = 1, y = 1, adj = 4, col = "blue")
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2), xlab = "U_V", ylab= "V")
abline(h=0, v=0)
abline(a = 0, b= 1, col = "red")
abline(a = 1, b= 1, col = "blue")
text("Z = 1", x = 1, y = 1, adj = 4, col = "blue")
text("Z = 1", x = 1, y = 1, pos = 4, col = "blue")
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2), xlab = "U_V", ylab= "V")
abline(h=0, v=0)
abline(a = 0, b= 1, col = "red")
abline(a = 1, b= 1, col = "blue")
text("Z = 1", x = 1, y = 2, pos = 1, col = "blue")
text("Z = 1", x = -1, y = -1, adj = 2, col = "red")
abline(v = 0, col = "purple")
abline(v = 0, col = "purple", lty = 2)
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2), xlab = "U_V", ylab= "V")
abline(h=0, v=0)
abline(a = 0, b= 1, col = "red")
abline(a = 1, b= 1, col = "blue")
text("Z = 1", x = 1, y = 2, pos = 1, col = "blue")
text("Z = 0", x = -1, y = -1, adj = 2, col = "red")
abline(v = 0, col = "purple", lty = 2, lwd= 2)
abline(v = 0, col = "purple", lty = 2, lwd= 3)
abline(v = -1, col = "green", lty = 2, lwd = 3)
abline(v = 0, col = "purple", lty = 2, lwd= 3)
abline(v = -1, col = "forestgreen", lty = 2, lwd = 3)
text("Always Takers", x = 1, y = -1)
text("Always Takers", x = 1, y = -1)
text("Compliers", x= -0.5, y = 1)
text("Never Takes", x= -1,5, y = 1)
text("Never Takes", x= -1.5, y = 1)
text("Z = 1", x = 1, y = 2, pos = 4, col = "blue")
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2), xlab = "U_V", ylab= "V")
abline(h=0, v=0)
abline(a = 0, b= 1, col = "red")
abline(a = 1, b= 1, col = "blue")
text("Z = 1", x = 1, y = 2, pos = 4, col = "blue")
text("Z = 0", x = -1, y = -1, adj = 2, col = "red")
abline(v = 0, col = "purple", lty = 2, lwd= 3)
abline(v = -1, col = "forestgreen", lty = 2, lwd = 3)
text("Always Takers", x = 1, y = -1)
text("Compliers", x= -0.5, y = 1)
text("Never Takes", x= -1.5, y = 1)
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2), xlab = "U_V", ylab= "V")
abline(h=0, v=0)
abline(a = 0, b= 1, col = "red")
abline(a = 1, b= 1, col = "blue")
text("Z = 1", x = 1, y = 2, pos = 4, col = "blue")
text("Z = 0", x = -1, y = -1, adj = 2, col = "red")
abline(v = 0, col = "purple", lty = 2, lwd= 3)
abline(v = -1, col = "forestgreen", lty = 2, lwd = 3)
text("Always Takers", x = 1, y = -1)
text("Compliers", x= -0.5, y = 1)
text("Never Takers", x= -1.5, y = 1)
text("Z = 1", x = 1, y = 2, adj = 4, col = "blue")
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2), xlab = "U_V", ylab= "V")
abline(h=0, v=0)
abline(a = 0, b= 1, col = "red")
abline(a = 1, b= 1, col = "blue")
text("Z = 1", x = 1, y = 2, pos = 4, col = "blue")
text("Z = 0", x = -1, y = -1, pos = 2, col = "red")
abline(v = 0, col = "purple", lty = 2, lwd= 3)
abline(v = -1, col = "forestgreen", lty = 2, lwd = 3)
text("Always Takers", x = 1, y = -1)
text("Compliers", x= -0.5, y = 1)
text("Never Takers", x= -1.5, y = 1)
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2), xlab = "U_V", ylab= "V")
abline(h=0, v=0)
abline(a = 0, b= 1, col = "red")
abline(a = 1, b= 1, col = "blue")
text("Z = 1", x = 1, y = 2, pos = 4, col = "blue")
text("Z = 0", x = -1.5, y = -1.5, pos = 2, col = "red")
abline(v = 0, col = "purple", lty = 2, lwd= 3)
abline(v = -1, col = "forestgreen", lty = 2, lwd = 3)
text("Always Takers", x = 1, y = -1)
text("Compliers", x= -0.5, y = 1)
text("Never Takers", x= -1.5, y = 1)
png("p1_q3_a.png", width = 480, height = 360)
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2), xlab = "U_V", ylab= "V")
abline(h=0, v=0)
abline(a = 0, b= 1, col = "red")
abline(a = 1, b= 1, col = "blue")
text("Z = 1", x = 1, y = 2, pos = 4, col = "blue")
text("Z = 0", x = -1.5, y = -1.5, pos = 2, col = "red")
abline(v = 0, col = "purple", lty = 2, lwd= 3)
abline(v = -1, col = "forestgreen", lty = 2, lwd = 3)
text("Always Takers", x = 1, y = -1)
text("Compliers", x= -0.5, y = 1)
text("Never Takers", x= -1.5, y = 1)
dev.off()
setwd("/Users/vonhafften/Documents/UW Madison/problem_sets/econ_717b/ps2/")
png("p1_q3_a.png", width = 480, height = 360)
plot(1, type = "n", ylim = c(-2, 2), xlim = c(-2, 2), xlab = "U_V", ylab= "V")
abline(h=0, v=0)
abline(a = 0, b= 1, col = "red")
abline(a = 1, b= 1, col = "blue")
text("Z = 1", x = 1, y = 2, pos = 4, col = "blue")
text("Z = 0", x = -1.5, y = -1.5, pos = 2, col = "red")
abline(v = 0, col = "purple", lty = 2, lwd= 3)
abline(v = -1, col = "forestgreen", lty = 2, lwd = 3)
text("Always Takers", x = 1, y = -1)
text("Compliers", x= -0.5, y = 1)
text("Never Takers", x= -1.5, y = 1)
dev.off()
